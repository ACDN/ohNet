diff --git a/Upnp/Api/Cpp/Buffer.h b/Upnp/Api/Cpp/Buffer.h
index 37e664c..0cab1d4 100644
--- a/Upnp/Api/Cpp/Buffer.h
+++ b/Upnp/Api/Cpp/Buffer.h
@@ -12,7 +12,7 @@ namespace Zapp {
 
 class Brn;
 
-class Brx
+class DllExportClass Brx
 {
 public:
     inline TUint Bytes() const;
@@ -39,7 +39,7 @@ private:
     Brx& operator=(const Brx& aBrx);
 };
 
-class Brn : public Brx
+class DllExportClass Brn : public Brx
 {
 public:
     inline explicit Brn();
@@ -57,7 +57,7 @@ private:
     Brn& operator=(const Brn& aBrn);
 };
 
-class Brv : public Brx, public INonCopyable
+class DllExportClass Brv : public Brx, public INonCopyable
 {
 public:
     DllExport ~Brv();
@@ -71,7 +71,7 @@ protected:
 
 class Brhz;
 
-class Brh : public Brv
+class DllExportClass Brh : public Brv
 {
 	friend class Bwh;
 	friend class Brhz;
@@ -86,7 +86,7 @@ public:
     DllExport TChar* Extract();
 };
 
-class Brhz : public Brv
+class DllExportClass Brhz : public Brv
 {
 	friend class Bwh;
 public:
diff --git a/Upnp/Api/Cpp/Core/CpDevice.h b/Upnp/Api/Cpp/Core/CpDevice.h
index bd0aa29..d21592e 100644
--- a/Upnp/Api/Cpp/Core/CpDevice.h
+++ b/Upnp/Api/Cpp/Core/CpDevice.h
@@ -10,7 +10,7 @@
 namespace Zapp {
 
 class CpiDevice;
-class CpDevice
+class DllExportClass CpDevice
 {
 public:
     CpDevice(CpiDevice& aDevice);
@@ -35,7 +35,7 @@ class FunctorCpiDevice;
 /**
  * List of devices available on the current subnet
  */
-class CpDeviceList
+class DllExportClass CpDeviceList
 {
 public:
     DllExport ~CpDeviceList();
diff --git a/Upnp/Api/Cpp/Core/CpDeviceUpnp.h b/Upnp/Api/Cpp/Core/CpDeviceUpnp.h
index 60ae50e..5bc0024 100644
--- a/Upnp/Api/Cpp/Core/CpDeviceUpnp.h
+++ b/Upnp/Api/Cpp/Core/CpDeviceUpnp.h
@@ -21,7 +21,7 @@ namespace Zapp {
 /**
  * List of all UPnP devices on the current subnet
  */
-class CpDeviceListUpnpAll : public CpDeviceList
+class DllExportClass CpDeviceListUpnpAll : public CpDeviceList
 {
 public:
     DllExport CpDeviceListUpnpAll(FunctorCpDevice aAdded, FunctorCpDevice aRemoved);
@@ -30,7 +30,7 @@ public:
 /**
  * List of all root UPnP devices on the current subnet
  */
-class CpDeviceListUpnpRoot : public CpDeviceList
+class DllExportClass CpDeviceListUpnpRoot : public CpDeviceList
 {
 public:
     DllExport CpDeviceListUpnpRoot(FunctorCpDevice aAdded, FunctorCpDevice aRemoved);
@@ -39,7 +39,7 @@ public:
 /**
  * List of all UPnP devices with a given uuid (udn) on the current subnet
  */
-class CpDeviceListUpnpUuid : public CpDeviceList
+class DllExportClass CpDeviceListUpnpUuid : public CpDeviceList
 {
 public:
     DllExport CpDeviceListUpnpUuid(const Brx& aUuid, FunctorCpDevice aAdded, FunctorCpDevice aRemoved);
@@ -48,7 +48,7 @@ public:
 /**
  * List of all UPnP devices of a given device type on the current subnet
  */
-class CpDeviceListUpnpDeviceType : public CpDeviceList
+class DllExportClass CpDeviceListUpnpDeviceType : public CpDeviceList
 {
 public:
     DllExport CpDeviceListUpnpDeviceType(const Brx& aDomainName, const Brx& aDeviceType, TUint aVersion,
@@ -58,7 +58,7 @@ public:
 /**
  * List of all UPnP devices of a given service type on the current subnet
  */
-class CpDeviceListUpnpServiceType : public CpDeviceList
+class DllExportClass CpDeviceListUpnpServiceType : public CpDeviceList
 {
 public:
     DllExport CpDeviceListUpnpServiceType(const Brx& aDomainName, const Brx& aServiceType, TUint aVersion,
diff --git a/Upnp/Api/Cpp/Core/DvDevice.h b/Upnp/Api/Cpp/Core/DvDevice.h
index c691f83..a76e935 100644
--- a/Upnp/Api/Cpp/Core/DvDevice.h
+++ b/Upnp/Api/Cpp/Core/DvDevice.h
@@ -16,7 +16,7 @@ public:
 };
 
 class DviDevice;
-class DvDevice
+class DllExportClass DvDevice
 {
 public:
     DvDevice(const Brx& aUdn);
diff --git a/Upnp/Api/Cpp/CpProxy.h b/Upnp/Api/Cpp/CpProxy.h
index 1bc7dac..841fb49 100644
--- a/Upnp/Api/Cpp/CpProxy.h
+++ b/Upnp/Api/Cpp/CpProxy.h
@@ -15,7 +15,7 @@ class Mutex;
 /**
  * Base class for all UPnP services
  */
-class CpProxy
+class DllExportClass CpProxy
 {
 public:
     /**
@@ -24,12 +24,12 @@ public:
      * in a given variable or SetPropertyChangesComplete() to register a callback
      * which runs after each group of 1..n changes is processed.
      */
-    void Subscribe();
+    DllExport void Subscribe();
     /**
      * Unsubscribe to notification of changes in state variables.
      * No further notifications will be published until Subscribe() is called again.
      */
-    void Unsubscribe();
+    DllExport void Unsubscribe();
     /**
      * Register a callback which will run after each group of 1..n changes to
      * state variable is processed.
diff --git a/Upnp/Api/Cpp/DvService.h b/Upnp/Api/Cpp/DvService.h
index 9439d03..a4f4c35 100644
--- a/Upnp/Api/Cpp/DvService.h
+++ b/Upnp/Api/Cpp/DvService.h
@@ -14,7 +14,7 @@ class PropertyBool;
 class PropertyString;
 class PropertyBinary;
 
-class DvService
+class DllExportClass DvService
 {
 public:
     void PropertiesLock();
diff --git a/Upnp/Api/Cpp/Exception.h b/Upnp/Api/Cpp/Exception.h
index f6690b2..5aaaec4 100644
--- a/Upnp/Api/Cpp/Exception.h
+++ b/Upnp/Api/Cpp/Exception.h
@@ -47,7 +47,7 @@ DllExport void CallAssertHandler(const TChar*, TUint);
 
 /** Base class for all Zapp exceptions.  Some may be recoverable, others may
 not. */
-class Exception
+class DllExportClass Exception
 {
 public:
     DllExport Exception(const TChar* aMsg, const TChar* aFile, TUint aLine);
diff --git a/Upnp/ControlPoint/AsyncPrivate.h b/Upnp/ControlPoint/AsyncPrivate.h
index 451b653..9985618 100644
--- a/Upnp/ControlPoint/AsyncPrivate.h
+++ b/Upnp/ControlPoint/AsyncPrivate.h
@@ -19,7 +19,7 @@ public:
 };
 
 
-class SyncProxyAction
+class DllExportClass SyncProxyAction
 {
 public:
     DllExport FunctorAsync& Functor();
diff --git a/Upnp/ControlPoint/CpiService.h b/Upnp/ControlPoint/CpiService.h
index 6aa425f..a5a904d 100644
--- a/Upnp/ControlPoint/CpiService.h
+++ b/Upnp/ControlPoint/CpiService.h
@@ -38,7 +38,7 @@ typedef std::map<Brn,Property*,BufferCmp> PropertyMap;
  * of the service will also own a device reference and will ensure that the service
  * is destroyed before the device reference is released.
  */
-class CpiService : public Zapp::Service
+class DllExportClass CpiService : public Zapp::Service
 {
 public:
     DllExport CpiService(const TChar* aDomain, const TChar* aName, TUint aVersion, CpiDevice& aDevice);
@@ -168,7 +168,7 @@ protected:
 /**
  * String argument.  Output buffers will be nul terminated.
  */
-class ArgumentString : public Argument
+class DllExportClass ArgumentString : public Argument
 {
 public:
     DllExport ArgumentString(const Zapp::Parameter& aParameter); // for output params
@@ -185,7 +185,7 @@ private:
 /**
  * Integer argument
  */
-class ArgumentInt : public Argument
+class DllExportClass ArgumentInt : public Argument
 {
 public:
     DllExport ArgumentInt(const Zapp::Parameter& aParameter);
@@ -201,7 +201,7 @@ private:
 /**
  * Unsigned integer argument
  */
-class ArgumentUint : public Argument
+class DllExportClass ArgumentUint : public Argument
 {
 public:
     DllExport ArgumentUint(const Zapp::Parameter& aParameter);
@@ -217,7 +217,7 @@ private:
 /**
  * Boolean arguments
  */
-class ArgumentBool : public Argument
+class DllExportClass ArgumentBool : public Argument
 {
 public:
     DllExport ArgumentBool(const Zapp::Parameter& aParameter);
@@ -233,7 +233,7 @@ private:
 /**
  * Binary argument.  Similar to ArgumentString but output will not be nul terminated
  */
-class ArgumentBinary : public Argument
+class DllExportClass ArgumentBinary : public Argument
 {
 public:
     DllExport ArgumentBinary(const Zapp::Parameter& aParameter);
@@ -284,7 +284,7 @@ public:
  *      true if the invocation failed.  If no error occurred, each member of
  *      OutputArguments() will be set.
  */
-class Invocation : public Async
+class DllExportClass Invocation : public Async
 {
 public:
     /**
diff --git a/Upnp/Makefile b/Upnp/Makefile
index 9a8c961..d5a47f0 100644
--- a/Upnp/Makefile
+++ b/Upnp/Makefile
@@ -3,7 +3,7 @@
 
 # Macros used by Common.mak
 ar = ar rc $(objdir)
-cflags = -fexceptions -Wall -pipe -D_GNU_SOURCE -D_REENTRANT -DDEFINE_LITTLE_ENDIAN -DDEFINE_TRACE -g -O0 -Wno-psabi -fvisibility=hidden -DDllImport="__attribute__ ((visibility(\"default\")))" -DDllExport="__attribute__ ((visibility(\"default\")))"
+cflags = -fexceptions -Wall -pipe -D_GNU_SOURCE -D_REENTRANT -DDEFINE_LITTLE_ENDIAN -DDEFINE_TRACE -g -O0 -Wno-psabi -fvisibility=hidden -DDllImport="__attribute__ ((visibility(\"default\")))" -DDllExport="__attribute__ ((visibility(\"default\")))" -DDllExportClass="__attribute__ ((visibility(\"default\")))"
 objdir = Build/Obj/Posix/
 inc_build = Build/Include
 includes = -IBuild/Include/ -IBuild/Include/Cpp/
diff --git a/Upnp/Public/C/CpProxyCPrivate.h b/Upnp/Public/C/CpProxyCPrivate.h
index 5e2f7bc..174819b 100644
--- a/Upnp/Public/C/CpProxyCPrivate.h
+++ b/Upnp/Public/C/CpProxyCPrivate.h
@@ -7,7 +7,7 @@
 
 namespace Zapp {
 
-class CpProxyC
+class DllExportClass CpProxyC
 {
 public:
     void Subscribe() { iProxy->Subscribe(); }
diff --git a/Upnp/Thread/Thread.h b/Upnp/Thread/Thread.h
index 3950928..b238d5b 100644
--- a/Upnp/Thread/Thread.h
+++ b/Upnp/Thread/Thread.h
@@ -54,7 +54,7 @@ private:
     THandle iHandle;
 };
 
-class Mutex : public INonCopyable
+class DllExportClass Mutex : public INonCopyable
 {
 public:
     DllExport Mutex(const TChar* aName);
@@ -214,7 +214,7 @@ private:
  * automatically be signalled on stack cleanup (ie on return or when an
  * exception passes up).
  */
-class AutoMutex : public INonCopyable
+class DllExportClass AutoMutex : public INonCopyable
 {
 public:
     DllExport AutoMutex(Mutex& aMutex);
diff --git a/Upnp/Zapp.mak b/Upnp/Zapp.mak
index 6ff7d52..56dafea 100644
--- a/Upnp/Zapp.mak
+++ b/Upnp/Zapp.mak
@@ -3,7 +3,7 @@
 
 # Macros used by Common.mak
 ar = lib /nologo /out:$(objdir)
-cflags = /MDd /W4 /WX /EHsc /RTC1 /Zi /FR /Gz -DDEFINE_LITTLE_ENDIAN -DDEFINE_TRACE -D_CRT_SECURE_NO_WARNINGS /Od -DDllImport=__declspec(dllimport) -DDllExport=__declspec(dllexport)
+cflags = /MDd /W4 /WX /EHsc /RTC1 /Zi /FR /Gz -DDEFINE_LITTLE_ENDIAN -DDEFINE_TRACE -D_CRT_SECURE_NO_WARNINGS /Od -DDllImport=__declspec(dllimport) -DDllExport=__declspec(dllexport) -DDllExportClass=
 objdirbare = Build\Obj\Windows
 objdir = $(objdirbare)\\
 inc_build = Build\\Include
